version: '2.4'

services:
  app:
    image: {{ cookiecutter.module_name }}
    container_name: {{ cookiecutter.module_name }}
    build: .
    # Allow container to be attached to, e.g., to access the pdb shell
    stdin_open: true
    tty: true
    ports:
      # Map ports on your computer to ports on your container. This allows you,
      # e.g., to visit your containerized application in a browser on your
      # computer.
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Mount the development directory as a volume into the container, so
      # Docker automatically recognizes your changes.
      - .:/app
      # Mount the node_modules directory so that our local mount doesn't
      # clobber it.
      - {{ cookiecutter.module_name }}-node-modules:/app/node_modules
    environment:
      DJANGO_SECRET_KEY: reallysupersecret
      DJANGO_MANAGEPY_MIGRATE: "on"
      DJANGO_DEBUG: "True"
    env_file:
      - .env
    entrypoint: /app/docker-entrypoint.sh
    command: python manage.py runserver 0.0.0.0:8000

  postgres:
    container_name: {{ cookiecutter.module_name }}-postgres
    image: mdillon/postgis:11
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      # The default Postgres image exposes a number of environmental variables
      # that allow you to configure the container's behavior, without writing
      # any additional code. Specify the name of your database, and any other
      # variables, here. https://hub.docker.com/_/postgres/#environment-variables
      POSTGRES_DB: {{ cookiecutter.module_name }}
      POSTGRES_PASSWORD: postgres
    volumes:
      # By default, Postgres instantiates an anonymous volume. Use a named
      # one, so your data persists beyond the life of the container. See this
      # post for a discussion of the pitfalls of Postgres and anonymous
      # volumes: https://linuxhint.com/run_postgresql_docker_compose/
      - {{ cookiecutter.module_name }}-db-data:/var/lib/postgresql/data
    ports:
      - 32001:5432

volumes:
  # Declare your named volume for Postgres.
  {{ cookiecutter.module_name }}-db-data:
  # Making node_modules a named volume prevents the ./app volume mount from
  # clobbering the directory in the container.
  {{ cookiecutter.module_name }}-node-modules:
